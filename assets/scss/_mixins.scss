@use 'sass:map';

@mixin transition($time: 0.3s) {
  transition-property: all;
  transition-timing-function: ease;
  transition-duration: $time;
}

@mixin flex-start {
  display: flex;
  align-items: flex-start;
}

@mixin flex-center {
  display: flex;
  align-items: center;
}

@mixin flex-total-center {
  @include flex-center;
  justify-content: center;
}

@mixin flex-center-justify {
  @include flex-center;
  justify-content: space-between;
}

@mixin flex-start-justify {
  @include flex-start;
  justify-content: space-between;
}

$breakpoints: (
  'desktop-large': 1600px,
  'desktop': 1440px,
  'desktop-small': 1366px,
  'laptop': 1280px,
  'laptop-medium': 1200px,
  'laptop-small': 1050px,
  'tablet': 991px,
  'tablet-small': 768px,
  'mobile': 560px,
  'mobile-ultra-small': 350px,
);

@mixin responsive($breakpoint-name, $direction: max) {
  @if map.has-key($breakpoints, $breakpoint-name) {
    $value: map.get($breakpoints, $breakpoint-name);

    @if $direction == max {
      @media (max-width: $value) {
        @content;
      }
    } @else if $direction == min {
      @media (min-width: $value) {
        @content;
      }
    } @else {
      @warn "Direção inválida: use 'min' ou 'max'";
    }
  } @else {
    @warn "Breakpoint que você definiu não existe";
  }
}

@mixin truncate($lines) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
}
